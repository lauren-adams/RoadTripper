{"ast":null,"code":"export const validate = (data, type) => {\n  const errors = {};\n\n  if (!data.email) {\n    errors.email = \"Email is Required!\";\n  } else if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(String(data.email).toLowerCase())) {\n    errors.email = \"Email address is invalid!\";\n  } else {\n    delete errors.email;\n  }\n\n  if (!data.password) {\n    errors.password = \"Password is Required\";\n  } else if (!(data.password.length >= 6)) {\n    errors.password = \"Password needs to be 6 character or more\";\n  } else {\n    delete errors.password;\n  }\n\n  if (type === \"signUp\") {\n    if (!data.name.trim()) {\n      errors.name = \"Username is Required!\";\n    } else {\n      delete errors.name;\n    }\n\n    if (!data.confirmPassword) {\n      errors.confirmPassword = \"Confirm the Password\";\n    } else if (!(data.confirmPassword === data.password)) {\n      errors.confirmPassword = \"Password is not match!\";\n    } else {\n      delete errors.confirmPassword;\n    }\n\n    if (data.IsAccepted) {\n      delete errors.IsAccepted;\n    } else {\n      errors.IsAccepted = \"Accept terms!\";\n    }\n  }\n\n  return errors;\n};","map":{"version":3,"names":["validate","data","type","errors","email","test","String","toLowerCase","password","length","name","trim","confirmPassword","IsAccepted"],"sources":["C:/Users/Laure/OneDrive/Documents/GitHub/software-ii/react-login/src/components/validate.js"],"sourcesContent":["export const validate = (data, type) => {\r\n  const errors = {};\r\n\r\n  if (!data.email) {\r\n    errors.email = \"Email is Required!\";\r\n  } else if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(String(data.email).toLowerCase())) {\r\n    errors.email = \"Email address is invalid!\";\r\n  } else {\r\n    delete errors.email;\r\n  }\r\n\r\n  if (!data.password) {\r\n    errors.password = \"Password is Required\";\r\n  } else if (!(data.password.length >= 6)) {\r\n    errors.password = \"Password needs to be 6 character or more\";\r\n  } else {\r\n    delete errors.password;\r\n  }\r\n\r\n  if (type === \"signUp\") {\r\n    if (!data.name.trim()) {\r\n      errors.name = \"Username is Required!\";\r\n    } else {\r\n      delete errors.name;\r\n    }\r\n    if (!data.confirmPassword) {\r\n      errors.confirmPassword = \"Confirm the Password\";\r\n    } else if (!(data.confirmPassword === data.password)) {\r\n      errors.confirmPassword = \"Password is not match!\";\r\n    } else {\r\n      delete errors.confirmPassword;\r\n    }\r\n\r\n    if (data.IsAccepted) {\r\n      delete errors.IsAccepted;\r\n    } else {\r\n      errors.IsAccepted = \"Accept terms!\";\r\n    }\r\n  }\r\n\r\n  return errors;\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;EACtC,MAAMC,MAAM,GAAG,EAAf;;EAEA,IAAI,CAACF,IAAI,CAACG,KAAV,EAAiB;IACfD,MAAM,CAACC,KAAP,GAAe,oBAAf;EACD,CAFD,MAEO,IAAI,CAAC,wJAAwJC,IAAxJ,CAA6JC,MAAM,CAACL,IAAI,CAACG,KAAN,CAAN,CAAmBG,WAAnB,EAA7J,CAAL,EAAqM;IAC1MJ,MAAM,CAACC,KAAP,GAAe,2BAAf;EACD,CAFM,MAEA;IACL,OAAOD,MAAM,CAACC,KAAd;EACD;;EAED,IAAI,CAACH,IAAI,CAACO,QAAV,EAAoB;IAClBL,MAAM,CAACK,QAAP,GAAkB,sBAAlB;EACD,CAFD,MAEO,IAAI,EAAEP,IAAI,CAACO,QAAL,CAAcC,MAAd,IAAwB,CAA1B,CAAJ,EAAkC;IACvCN,MAAM,CAACK,QAAP,GAAkB,0CAAlB;EACD,CAFM,MAEA;IACL,OAAOL,MAAM,CAACK,QAAd;EACD;;EAED,IAAIN,IAAI,KAAK,QAAb,EAAuB;IACrB,IAAI,CAACD,IAAI,CAACS,IAAL,CAAUC,IAAV,EAAL,EAAuB;MACrBR,MAAM,CAACO,IAAP,GAAc,uBAAd;IACD,CAFD,MAEO;MACL,OAAOP,MAAM,CAACO,IAAd;IACD;;IACD,IAAI,CAACT,IAAI,CAACW,eAAV,EAA2B;MACzBT,MAAM,CAACS,eAAP,GAAyB,sBAAzB;IACD,CAFD,MAEO,IAAI,EAAEX,IAAI,CAACW,eAAL,KAAyBX,IAAI,CAACO,QAAhC,CAAJ,EAA+C;MACpDL,MAAM,CAACS,eAAP,GAAyB,wBAAzB;IACD,CAFM,MAEA;MACL,OAAOT,MAAM,CAACS,eAAd;IACD;;IAED,IAAIX,IAAI,CAACY,UAAT,EAAqB;MACnB,OAAOV,MAAM,CAACU,UAAd;IACD,CAFD,MAEO;MACLV,MAAM,CAACU,UAAP,GAAoB,eAApB;IACD;EACF;;EAED,OAAOV,MAAP;AACD,CAzCM"},"metadata":{},"sourceType":"module"}